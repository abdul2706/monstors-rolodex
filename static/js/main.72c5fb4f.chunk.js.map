{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","user","name","email","CardList","users","map","id","SearchBox","placeholder","handleChange","type","onChange","App","onSearchChange","e","setState","searchField","target","value","state","fetch","then","response","json","this","filteredUsers","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,OACJC,IAAG,+BAA0BH,EAAMI,KAAKC,KAArC,sCAEP,6BAAKL,EAAMI,KAAKC,OAChB,4BAAIL,EAAMI,KAAKE,YCNdC,EAAW,SAACP,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMQ,MAAMC,KAAI,SAACL,GAAD,OACb,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKM,UCNnBC,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBACIZ,UAAU,SACVa,KAAK,OACLF,YAAaA,EACbG,SAAUF,MCmCPG,E,kDArCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACTf,MAAO,GACPY,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACjB,GAAD,OAAW,EAAKW,SAAS,CAAEX,MAAOA,S,oBAOhD,WACI,MAA+BoB,KAAKL,MAA5Bf,EAAR,EAAQA,MAAOY,EAAf,EAAeA,YACTS,EAAgBrB,EAAMsB,QAAO,SAAC1B,GAAD,OAC/BA,EAAKC,KAAK0B,cAAcC,SAASZ,EAAYW,kBAGjD,OACI,sBAAK9B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIW,YAAY,cACZC,aAAce,KAAKX,iBAEvB,cAAC,EAAD,CAAUT,MAAOqB,W,GAhCfI,aCQHC,EAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBX,MACjB,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFxBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.72c5fb4f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img\r\n                alt=\"user\"\r\n                src={`https://robohash.org/${props.user.name}?set=set5&size=180x180&bgset=bg1`}\r\n            />\r\n            <h2>{props.user.name}</h2>\r\n            <p>{props.user.email}</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\n\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.users.map((user) => (\r\n                <Card key={user.id} user={user} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            type=\"text\"\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            users: [],\n            searchField: \"\",\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then((response) => response.json())\n            .then((users) => this.setState({ users: users }));\n    }\n\n    onSearchChange = (e) => {\n        this.setState({ searchField: e.target.value });\n    };\n\n    render() {\n        const { users, searchField } = this.state;\n        const filteredUsers = users.filter((user) =>\n            user.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder=\"Search User\"\n                    handleChange={this.onSearchChange}\n                />\n                <CardList users={filteredUsers} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}